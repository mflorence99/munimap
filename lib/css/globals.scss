@font-face {
  font-family: 'Bentham Regular';
  font-style: normal;
  font-weight: normal;
  src: url('../assets/Bentham Regular.ttf') format('truetype');
}

@font-face {
  font-family: 'Carnevalee Freakshow';
  font-style: normal;
  font-weight: normal;
  src: url('../assets/Carnevalee Freakshow.ttf') format('truetype');
}

@font-face {
  font-family: 'Font Awesome';
  font-style: normal;
  font-weight: normal;
  src: url('../assets/fa-regular-400.ttf') format('truetype');
}

@font-face {
  font-family: 'Font Awesome';
  font-style: normal;
  font-weight: bold;
  src: url('../assets/fa-solid-900.ttf') format('truetype');
}

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: normal;
  src: url('../assets/roboto-latin-400.woff2') format('woff2'),
    url('../assets/roboto-latin-400.woff') format('woff');
}

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: bold;
  src: url('../assets/roboto-latin-700.woff2') format('woff2'),
    url('../assets/roboto-latin-700.woff') format('woff');
}

@import './colors.scss';
@import '~@angular/material/theming';

@include mat-core();

$light-app-theme: mat-light-theme(
  (
    color: (
      primary: mat-palette($mat-blue),
      accent: mat-palette($mat-amber, A200, A100, A400),
      warn: mat-palette($mat-red)
    )
  )
);

$dark-app-theme: mat-dark-theme(
  (
    color: (
      primary: mat-palette($mat-blue),
      accent: mat-palette($mat-amber, A200, A100, A400),
      warn: mat-palette($mat-red)
    )
  )
);

.light-theme {
  @include angular-material-theme($light-app-theme);

  // ðŸ‘‰ bridge from Angular Material variables to CSS variables

  --primary-color: var(--mat-blue-a200);
  --accent-color: var(--mat-amber-a200);
  --warn-color: var(--mat-red-a200);

  --text-color: var(--mat-grey-900);
  --disabled-color: var(--mat-grey-500);
  --background-color: var(--mat-grey-100);

  --fa-primary-color: var(--text-color);
  --fa-secondary-color: var(--accent-color);

  --fa-primary-opacity: 1;
  --fa-secondary-opacity: 1;
}

.dark-theme {
  @include angular-material-color($dark-app-theme);

  // ðŸ‘‰ bridge from Angular Material variables to CSS variables

  --primary-color: var(--mat-blue-a200);
  --accent-color: var(--mat-amber-a200);
  --warn-color: var(--mat-red-a200);

  --text-color: var(--mat-grey-100);
  --disabled-color: var(--mat-grey-500);
  --background-color: var(--mat-grey-900);

  --fa-primary-color: var(--text-color);
  --fa-secondary-color: var(--accent-color);

  --fa-primary-opacity: 1;
  --fa-secondary-opacity: 1;
}

:root {
  // ðŸ‘‰ this just is -- need a better way
  --map-cy-toolbar: 64;

  // ðŸ‘‰ make sure all colors are RGB,
  //    style components will figure opacity

  --map-boundary-fill: var(--rgb-gray-50);
  --map-boundary-outline: var(--rgb-blue-gray-700);
  --map-boundary-pattern: var(--rgb-gray-300);

  --map-bridge-red-icon-color: var(--rgb-deep-orange-200);
  --map-bridge-yellow-icon-color: var(--rgb-yellow-200);
  --map-bridge-green-icon-color: var(--rgb-green-200);
  --map-bridge-blue-icon-color: var(--rgb-blue-200);
  --map-bridge-line-color: var(--rgb-gray-700);

  --map-building-fill: var(--rgb-gray-400);
  --map-building-outline: var(--rgb-gray-700);

  --map-conservation-fill: var(--rgb-green-700);
  --map-conservation-outline: var(--rgb-green-700);

  --map-feature-disabled: var(--rgb-gray-900);
  --map-feature-fill: var(--rgb-green-700);
  --map-feature-outline: var(--rgb-gray-700);
  --map-feature-text-color: var(--rgb-gray-700);

  --map-floodplain-fill: var(--rgb-light-blue-500);
  --map-floodplain-flooded: var(--rgb-blue-500);

  --map-graticule-border-color: var(--rgb-gray-50);
  --map-graticule-line-color: var(--rgb-gray-900);
  --map-graticule-text-color: var(--rgb-gray-900);
  --map-graticule-text-inverse: var(--rgb-gray-50);

  --map-parcel-abutter: var(--rgb-blue-a200);
  --map-parcel-dimension-color: var(--rgb-blue-gray-900);
  --map-parcel-dimension-inverse: 255, 255, 255;
  --map-parcel-outline: var(--rgb-blue-gray-800);
  --map-parcel-redraw: var(--rgb-blue-a200);
  --map-parcel-select: var(--rgb-red-700);
  --map-parcel-text-color: 0, 0, 0;
  --map-parcel-text-inverse: 255, 255, 255;

  // land use color shading
  // ðŸ‘€  https://www.gismanual.com/style/ColorConventions.pdf
  --map-parcel-fill-u110: var(--rgb-brown-700);
  --map-parcel-fill-u120: var(--rgb-orange-700);
  --map-parcel-fill-u130: var(--rgb-deep-orange-700);
  --map-parcel-fill-u190: var(--rgb-yellow-700);
  --map-parcel-fill-u260: var(--rgb-red-700);
  --map-parcel-fill-u261: var(--rgb-purple-700);
  --map-parcel-fill-u300: var(--rgb-cyan-700);
  --map-parcel-fill-u400: var(--rgb-indigo-700);
  --map-parcel-fill-u500: var(--rgb-green-700);
  --map-parcel-fill-u501: var(--rgb-light-green-700);
  --map-parcel-fill-u502: var(--rgb-lime-800);
  --map-parcel-fill-u999: var(--rgb-gray-700);

  --map-place-icon-color: var(--rgb-brown-900);
  --map-place-text-color: var(--rgb-brown-900);
  --map-place-water-color: var(--rgb-blue-700);

  --map-powerline-icon-color: var(--rgb-yellow-500);
  --map-powerline-line-color: var(--rgb-gray-900);

  --map-railroad-active-color: var(--rgb-gray-900);
  --map-railroad-inactive-color: var(--rgb-gray-600);

  --map-river-line-color: var(--rgb-blue-200);
  --map-river-text-color: var(--rgb-blue-400);

  --map-riverbank-rocks: var(--rgb-brown-600);

  --map-road-text-color-I: var(--rgb-blue-gray-850);
  --map-road-text-color-II: var(--rgb-blue-gray-850);
  --map-road-text-color-III: var(--rgb-blue-gray-850);
  --map-road-text-color-IV: var(--rgb-blue-gray-850);
  --map-road-text-color-V: var(--rgb-blue-gray-850);
  --map-road-text-color-VI: var(--rgb-blue-gray-850);
  --map-road-text-color-0: var(--rgb-blue-gray-850);

  --map-road-edge-I: var(--rgb-gray-600);
  --map-road-edge-II: var(--rgb-gray-600);
  --map-road-edge-III: var(--rgb-gray-600);
  --map-road-edge-IV: var(--rgb-gray-600);
  --map-road-edge-V: var(--rgb-gray-600);
  --map-road-edge-VI: var(--rgb-gray-600);
  --map-road-edge-0: var(--rgb-gray-600);

  --map-road-lane-I: var(--rgb-red-300);
  --map-road-lane-II: var(--rgb-red-300);
  --map-road-lane-III: var(--rgb-red-300);
  --map-road-lane-IV: var(--rgb-red-300);
  --map-road-lane-V: var(--rgb-gray-50);
  --map-road-lane-VI: var(--rgb-gray-50);
  --map-road-lane-0: var(--rgb-gray-50);

  --map-stonewall-fill: var(--rgb-gray-100);
  --map-stonewall-rocks: var(--rgb-gray-700);

  --map-trail-line-color: var(--rgb-brown-600);
  --map-trail-text-color: var(--rgb-brown-600);

  --map-waterbody-fill: var(--rgb-blue-200);

  --map-wetland-swamp: var(--rgb-blue-900);
}

// ðŸ‘‰ base styles

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

::-webkit-input-placeholder {
  color: var(--mat-gray-600);
}

::-moz-placeholder {
  color: var(--mat-gray-600);
}

::-webkit-scrollbar {
  height: 0.5rem;
  width: 0.5rem;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: var(--mat-grey-700);
  border-radius: 0.25rem;
}

:focus {
  outline: 0;
}

a {
  color: var(--primary-color);
  cursor: pointer;
  text-decoration: none;

  &:hover {
    color: var(--accent-color);
    text-decoration: none;
  }
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: 'Roboto', sans-serif;
  font-size: 1rem;
  font-weight: 400;
  height: 100%;
  line-height: 150%;
  overflow: hidden;
  user-select: none;
  width: 100%;
}

em {
  color: var(--accent-color);
  font-style: normal;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

hr {
  margin: 1rem 0;
}

html {
  border: 0;
  font-size: 14px;
  height: 100%;
  width: 100%;
}

ol,
ul {
  list-style-type: none;
}

select {
  appearance: none;
  background-color: transparent;
  border: none;
  color: inherit;
  cursor: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  margin: 0;
  padding: 0 1em 0 0;
  width: 100%;
}

// ðŸ‘‰ Angular Material styles

a[mat-flat-button] {
  color: var(--primary-color) !important;
  background-color: var(--background-color) !important;
  padding: 0 !important;

  &:hover {
    color: var(--accent-color) !important;
    text-decoration: none !important;
  }
}

.mat-button-toggle {
  --fa-primary-color: var(--text-color);
  --fa-secondary-color: var(--mat-gray-600);

  flex-shrink: 0;

  &.mat-button-toggle-checked {
    --fa-primary-color: var(--text-color);
    --fa-secondary-color: var(--accent-color);
  }
}

.mat-card,
.mat-dialog-container,
.mat-drawer,
.mat-menu-content {
  background-color: var(--background-color) !important;
  box-shadow: rgb(255 255 255 / 33%) 0px 8px 24px !important;
}

.mat-card-actions {
  margin: 0 !important;
}

.mat-dialog-actions {
  justify-content: flex-end !important;
}

.mat-icon-button {
  line-height: 1 !important;

  &.mat-button-disabled {
    --fa-primary-color: var(--text-color);
    --fa-secondary-color: var(--text-color);
    --fa-primary-opacity: 0.6;
    --fa-secondary-opacity: 0.4;

    color: var(--disabled-color) !important;
  }
}

.mat-snack-bar-container {
  background-color: var(--background-color) !important;
  color: var(--text-color) !important;
  max-width: 99vw !important;
}

.mat-toolbar-single-row {
  padding: 0 !important;
}

// ðŸ‘‰ Color Picker styles

color-picker {
  // ðŸ”¥ now THAT'S a hack -- but the color-picker is surprisingly
  //    hard to style b/c it is yanked out of the DOM
  justify-self: center;

  .cp-cancel-button-class {
    background-color: var(--mat-gray-300) !important;
    color: var(--mat-gray-800) !important;
    font-size: 1rem !important;
    padding: 0.25rem 0.5rem !important;
  }
}

// ðŸ‘‰ Firebase styles

.firebase-emulator-warning {
  display: none !important;
}

// ðŸ‘‰ ol styles

.ol-credits {
  // ðŸ‘‡ position set in code
  background-color: rgba(var(--rgb-gray-100), 0.66) !important;
  color: var(--background-color);
  font-family: 'Bentham Regular', sans-serif;
  line-height: 1;
  padding: 0 0.5rem !important;
  position: absolute;
  white-space: nowrap;

  button {
    display: none !important;
  }

  li,
  ul {
    display: inline-block;
  }

  li:not(:last-of-type)::after {
    content: '\00a0|\00a0';
  }
}

// ðŸ‘‰ going through some hoops here because although the legend
//    is only ever printed, we want to see it on the screen
//    for degugging

// ðŸ”¥ all this crap to negate the ol-ext ol-legend style

.ol-legend {
  bottom: unset !important;
  left: 20rem !important;
  max-height: unset !important;
  max-width: unset !important;
  overflow-x: unset !important;
  overflow-y: unset !important;
  max-width: unset !important;
  position: absolute !important;
  top: 20rem !important;
}

.ol-legend-print {
  transform: scale(3.5);
  transform-origin: left top;
}

.ol-overlay-container.ol-selectable {
  transition-duration: calc(var(--ol-overlay-animate-duration, 500) * 1ms);
  transition-property: transform;
  transition-timing-function: linear;
}

.ol-scaleline-line {
  background-color: rgba(var(--rgb-gray-100), 0.66);
  bottom: 1rem;
  left: 1rem;
  padding: 0.5rem;
  position: absolute;

  .ol-scaleline-line-inner {
    color: var(--background-color);
    font-size: 10px;
    position: relative;
    text-align: center;
  }

  .ol-scaleline-line-inner::after {
    border-color: var(--background-color);
    border-style: solid;
    border-width: 0 1px 1px 1px;
    content: '';
    left: 0;
    height: 50%;
    position: absolute;
    top: 50%;
    width: 100%;
  }
}

.ol-scaleline-bar {
  // ðŸ‘‡ position set in code
  position: absolute;
}
