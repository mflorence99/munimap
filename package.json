{
  "name": "munimap",
  "version": "6.1.2",
  "description": "MuniMap",
  "repository": {
    "type": "git",
    "url": "https://github.com/mflorence99/munimap.git"
  },
  "license": "MIT",
  "author": "Mark Florence",
  "scripts": {
    "assets:viewer:henniker": "cp ./data/'NEW HAMPSHIRE'/MERRIMACK/HENNIKER/*.geojson ./viewer/assets",
    "assets:viewer:washington": "cp ./data/'NEW HAMPSHIRE'/SULLIVAN/WASHINGTON/*.geojson ./viewer/assets",
    "bin:all": "npm run bin:state && npm run bin:counties && npm run bin:towns && npm run bin:indexer && npm run bin:buildings && npm run bin:lakes && npm run bin:parcels && npm run bin:places && npm run bin:powerlines && npm run bin:railroads && npm run bin:rivers && npm run bin:roads && npm run bin:trails && npm run bin:indexer && npm run bin:curated",
    "bin:avitar": "deno run -A ./bin/avitar.ts",
    "bin:aws:transfer": "deno run -A ./bin/aws-transfer.ts",
    "bin:buildings": "deno run -A ./bin/buildings.ts",
    "bin:buildings:curated": "deno run -A ./buildings-curated.ts",
    "bin:counties": "deno run -A ./bin/counties.ts",
    "bin:explorer": "deno run -A ./bin/explorer.ts",
    "bin:fix:culverts": "deno run -A ./bin/fix-culverts.ts",
    "bin:historicals:curated": "deno run -A ./bin/historicals-curated.ts && ./bin/bump-version.sh",
    "bin:indexer": "deno run -A ./bin/indexer.ts",
    "bin:lakes": "deno run -A ./bin/lakes.ts",
    "bin:owner:analysis": "deno run -A ./bin/owner-analysis.ts",
    "bin:parcels": "npm run bin:parcels:belknap && npm run bin:parcels:carroll && npm run bin:parcels:cheshire && npm run bin:parcels:coos && npm run bin:parcels:grafton && npm run bin:parcels:hillsborough && npm run bin:parcels:merrimack && npm run bin:parcels:rockingham && npm run bin:parcels:strafford && npm run bin:parcels:sullivan && npm run bin:parcels:curated",
    "bin:parcels:belknap": "deno run -A ./bin/parcels.ts --county=BELKNAP",
    "bin:parcels:carroll": "deno run -A ./bin/parcels.ts --county=CARROLL",
    "bin:parcels:cheshire": "deno run -A ./bin/parcels.ts --county=CHESHIRE",
    "bin:parcels:coos": "deno run -A ./bin/parcels.ts --county=COOS",
    "bin:parcels:curated": "deno run -A ./bin/parcels-curated.ts",
    "bin:parcels:grafton": "deno run -A ./bin/parcels.ts --county=GRAFTON",
    "bin:parcels:hillsborough": "deno run -A ./bin/parcels.ts --county=HILLSBOROUGH",
    "bin:parcels:merrimack": "deno run -A ./bin/parcels.ts --county=MERRIMACK",
    "bin:parcels:rockingham": "deno run -A ./bin/parcels.ts --county=ROCKINGHAM",
    "bin:parcels:strafford": "deno run -A ./bin/parcels.ts --county=STRAFFORD",
    "bin:parcels:sullivan": "deno run -A ./bin/parcels.ts --county=SULLIVAN",
    "bin:parcels:validate": "deno run -A ./bin/parcel-validator.ts ",
    "bin:places": "deno run -A ./bin/places.ts",
    "bin:powerlines": "deno run -A ./powerlines.ts",
    "bin:powerlines:prepare": "deno run -A ./bin/powerlines-prepare.ts",
    "bin:railroads": "deno run -A ./bin/railroads.ts",
    "bin:residents": "deno run -A ./bin/residents.ts",
    "bin:rivers": "deno run -A ./bin/rivers.ts",
    "bin:roads": "deno run -A ./bin/roads.ts",
    "bin:state": "deno run -A ./bin/state.ts",
    "bin:towns": "deno run -A ./bin/towns.ts",
    "bin:trails": "deno run -A ./bin/trails.ts",
    "build:author": "ng build author --configuration production",
    "build:proxy": "tsc -p ./proxy/src && cp -R ./proxy/node_modules ./dist/proxy",
    "build:viewer:henniker": "npm run assets:viewer:henniker && ng build viewer --configuration production",
    "build:viewer:washington": "npm run assets:viewer:washington && ng build viewer --configuration production",
    "clean:deps": "rm -rf ./node_modules && rm -f ./package-lock.json && npm install --verbose && npm outdated",
    "deploy:aws:author": "./bin/deploy-aws-author.sh",
    "deploy:aws:proxy": "./bin/deploy-aws-proxy.sh",
    "deploy:aws:viewer:henniker": "./bin/deploy-aws-viewer-henniker.sh",
    "deploy:aws:viewer:washington": "./bin/deploy-aws-viewer-washington.sh",
    "firebase:emulators": "firebase emulators:start",
    "firebase:emulators:backup": "deno run -A ./bin/backup.ts --useEmulator",
    "firebase:emulators:clean": "deno run -A ./bin/clean.ts  --useEmulator && deno run -A ./bin/parcel-stealer.ts  --useEmulator",
    "firebase:emulators:culverts:curated": "deno run -A ./bin/culverts-curated.ts --useEmulator",
    "firebase:emulators:init": "npm run firebase:emulators:users:curated && npm run firebase:emulators:parcels:curated && npm run firebase:emulators:maps:curated && npm run firebase:emulators:landmarks:curated && npm run firebase:emulators:culverts:curated",
    "firebase:emulators:landmarks:curated": "deno run -A ./bin/landmarks-curated.ts --useEmulator",
    "firebase:emulators:maps:curated": "deno run -A ./bin/maps-curated.ts --useEmulator",
    "firebase:emulators:parcels:curated": "deno run -A ./bin/parcel-stealer.ts --useEmulator",
    "firebase:emulators:patch:culverts": "deno run -A ./bin/patch-culverts.ts --useEmulator",
    "firebase:emulators:restore": "deno run -A ./bin/restore.ts --useEmulator",
    "firebase:emulators:users:curated": "deno run -A ./bin/users-curated.ts --useEmulator",
    "firebase:live:backup": "deno run -A ./bin/backup.ts",
    "firebase:live:clean": "deno run -A ./bin/clean.ts && deno run -A ./bin/parcel-stealer.ts",
    "firebase:live:culverts:curated": "deno run -A ./bin/culverts-curated.ts",
    "firebase:live:landmarks:curated": "deno run -A ./bin/landmarks-curated.ts",
    "firebase:live:maps:curated": "deno run -A ./bin/maps-curated.ts",
    "firebase:live:parcels:curated": "deno run -A ./bin/parcel-stealer.ts",
    "firebase:live:patch:culverts": "deno run -A ./bin/patch-culverts.ts",
    "firebase:live:restore": "deno run -A ./bin/restore.ts",
    "firebase:live:users:curated": "deno run -A ./bin/users-curated.ts",
    "lint": "eslint ./author/ ./lib/ ./proxy/ ./viewer/ ./worker/ && deno lint ./bin/",
    "patcher": "deno run -A ./bin/patcher.ts",
    "postinstall": "npm run patcher",
    "prettier": "prettier --write .",
    "serve:author": "ng serve author --port 4200",
    "serve:author:ssl": "ws -p 8100 --cert ./.ssh/ssl/cert.pem --key ./.ssh/ssl/key.pem --https --spa index.html --directory ./dist/author --log.format dev",
    "serve:proxy": "npm run build:proxy && node ./dist/proxy/server.js --port 4201",
    "serve:viewer:henniker": "npm run assets:viewer:henniker && ng serve viewer --port 4202",
    "serve:viewer:ssl": "ws -p 8102 --cert ./.ssh/ssl/cert.pem --key ./.ssh/ssl/key.pem --https --spa index.html --directory ./dist/viewer --log.format dev",
    "serve:viewer:washington": "npm run assets:viewer:washington && ng serve viewer --port 4202",
    "stylelint": "stylelint --fix **/*.{scss,ts}"
  },
  "dependencies": {
    "@angular/animations": "^19",
    "@angular/cdk": "^19",
    "@angular/common": "^19",
    "@angular/core": "^19",
    "@angular/fire": "^19",
    "@angular/forms": "^19",
    "@angular/material": "^19",
    "@angular/material-experimental": "^19",
    "@angular/platform-browser": "^19",
    "@angular/platform-browser-dynamic": "^19",
    "@angular/router": "^19",
    "@angular/service-worker": "^19",
    "@esri/arcgis-to-geojson-utils": "1.3.0",
    "@fortawesome/angular-fontawesome": "^2",
    "@fortawesome/fontawesome-free": "^7",
    "@fortawesome/fontawesome-svg-core": "^7",
    "@fortawesome/free-brands-svg-icons": "^7",
    "@fortawesome/free-regular-svg-icons": "^7",
    "@fortawesome/free-solid-svg-icons": "^7",
    "@fortawesome/pro-duotone-svg-icons": "^7",
    "@fortawesome/pro-light-svg-icons": "^7",
    "@fortawesome/pro-regular-svg-icons": "^7",
    "@fortawesome/pro-solid-svg-icons": "^7",
    "@mapbox/togeojson": "0.16.2",
    "@ngxs/devtools-plugin": "^20",
    "@ngxs/logger-plugin": "^20",
    "@ngxs/router-plugin": "^20",
    "@ngxs/storage-plugin": "^20",
    "@ngxs/store": "^20",
    "@sentry/angular-ivy": "^7",
    "@sentry/browser": "^9",
    "@sentry/tracing": "^7",
    "@turf/turf": "^7",
    "backoff-rxjs": "^7",
    "comlink": "^4",
    "debounce-decorator": "^1",
    "elm-pep": "^1",
    "fast-copy": "^3",
    "fast-equals": "^5",
    "file-saver": "^2",
    "firebase": "^12",
    "fontfaceobserver": "^2",
    "fuzzysort": "^3",
    "globalthis": "^1",
    "html2canvas": "^1",
    "jszip": "^3",
    "material-design-icons": "^3",
    "md5-file": "^5",
    "ngx-pipes": "^3",
    "ngx-router-animations": "^13",
    "object-hash": "^3",
    "ol": "^10",
    "ol-ext": "^4",
    "ol-mapbox-style": "^13",
    "polylabel": "^2",
    "proj4": "^2",
    "request": "^2",
    "rxfire": "^6",
    "rxjs": "^7",
    "serverx-ts": "0.0.41",
    "shpjs": "4.0.2",
    "tslib": "^2",
    "typeface-roboto": "^1",
    "ua-parser-js": "^2",
    "unzipper": "0.12.3",
    "url-parse": "^1",
    "zone.js": "~0.15.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^19",
    "@angular/cli": "^19",
    "@angular/compiler": "^19",
    "@angular/compiler-cli": "^19",
    "@aws-sdk/client-s3": "^3",
    "@aws-sdk/client-transfer": "^3",
    "@eslint/compat": "^1.2.3",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.15.0",
    "@types/file-saver": "^2",
    "@types/fontfaceobserver": "^2",
    "@types/object-hash": "^3",
    "@types/proj4": "^2",
    "@types/recursive-readdir": "^2",
    "@types/shpjs": "^3",
    "@types/ua-parser-js": "0.7.39",
    "@types/unzipper": "0.10.11",
    "@types/url-parse": "^1",
    "@typescript-eslint/eslint-plugin": "^8.16.0",
    "@typescript-eslint/parser": "^8.16.0",
    "chalk": "^5",
    "eslint": "^9",
    "eslint-config-mflorence99": "^3.2.2",
    "eslint-config-prettier": "^10",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-import-splitnsort": "^1.0.2",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^5.2.1",
    "postcss": "^8.4.49",
    "postcss-angular": "^1.0.3",
    "postcss-scss": "^4.0.9",
    "prettier": "^3.4.1",
    "prettier-plugin-css-order": "^2.1.2",
    "prettier-plugin-package": "^1.4.0",
    "recursive-readdir": "^2",
    "serverless-apigw-binary": "0.4.4",
    "serverless-domain-manager": "^8",
    "stylelint": "^16",
    "stylelint-config-standard": "^38",
    "stylelint-order": "^7",
    "typescript": "^5",
    "typescript-eslint": "^8.16.0"
  }
}
