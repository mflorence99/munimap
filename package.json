{
  "name": "munimap",
  "version": "3.0.9",
  "description": "MuniMap",
  "repository": {
    "type": "git",
    "url": "https://github.com/mflorence99/munimap.git"
  },
  "license": "MIT",
  "author": "Mark Florence",
  "scripts": {
    "align:parcels:finalize": "./bin/parcel-aligner-finalize.sh",
    "align:parcels:test": "ts-node --dir bin parcel-aligner.ts",
    "align:parcels:tweak": "./bin/parcel-aligner-tweak.sh",
    "assets:viewer:henniker": "cp ./data/'NEW HAMPSHIRE'/MERRIMACK/HENNIKER/*.geojson ./viewer/assets",
    "assets:viewer:washington": "cp ./data/'NEW HAMPSHIRE'/SULLIVAN/WASHINGTON/*.geojson ./viewer/assets",
    "build:author": "ng build author --configuration production",
    "build:proxy": "npm run compile:proxy && cp proxy/package.json dist/proxy && npm --prefix dist/proxy i",
    "build:viewer:henniker": "npm run assets:viewer:henniker && ng build viewer --configuration production",
    "build:viewer:washington": "npm run assets:viewer:washington && ng build viewer --configuration production",
    "clean:deps": "rm -rf node_modules && rm -f package-lock.json && npm install && npm outdated",
    "compile:proxy": "rm -rf dist/proxy/node_modules && rm -f dist/proxy/package-lock.json && tsc -p proxy/src",
    "deploy:aws:author": "./author/deploy-aws.sh",
    "deploy:aws:proxy": "npm run build:proxy && cp proxy/serverless.yml dist/proxy && cd dist/proxy && serverless deploy",
    "deploy:aws:viewer:henniker": "./viewer/deploy-aws-henniker.sh",
    "deploy:aws:viewer:washington": "./viewer/deploy-aws-washington.sh",
    "firebase:emulators": "firebase emulators:start",
    "firebase:emulators:backup": "ts-node --dir bin backup.ts --useEmulator",
    "firebase:emulators:clean": "ts-node --dir bin clean.ts  --useEmulator && ts-node --dir bin parcel-stealer.ts  --useEmulator",
    "firebase:emulators:init": "npm run firebase:emulators:users:curated && npm run firebase:emulators:parcels:curated && npm run firebase:emulators:maps:curated && npm run firebase:emulators:landmarks:curated",
    "firebase:emulators:landmarks:curated": "ts-node --dir bin landmarks-curated.ts --useEmulator",
    "firebase:emulators:maps:curated": "ts-node --dir bin maps-curated.ts --useEmulator",
    "firebase:emulators:parcels:curated": "ts-node --dir bin parcel-stealer.ts --useEmulator",
    "firebase:emulators:restore": "ts-node --dir bin restore.ts --useEmulator",
    "firebase:emulators:users:curated": "ts-node --dir bin users-curated.ts --useEmulator",
    "firebase:live:backup": "ts-node --dir bin backup.ts",
    "firebase:live:clean": "ts-node --dir bin clean.ts && ts-node --dir bin parcel-stealer.ts",
    "firebase:live:landmarks:curated": "ts-node --dir bin landmarks-curated.ts",
    "firebase:live:maps:curated": "ts-node --dir bin maps-curated.ts",
    "firebase:live:parcels:curated": "ts-node --dir bin parcel-stealer.ts",
    "firebase:live:restore": "ts-node --dir bin restore.ts",
    "firebase:live:users:curated": "ts-node --dir bin users-curated.ts",
    "postinstall": "npm run patcher",
    "lint": "TIMING=1 time eslint --ext ts ./",
    "patcher": "ts-node --dir bin patcher.ts",
    "prettier": "prettier --write .",
    "proxy:all": "npm run proxy:state && npm run proxy:counties && npm run proxy:towns && npm run proxy:indexer && npm run proxy:buildings && npm run proxy:lakes && npm run proxy:parcels && npm run proxy:places && npm run proxy:powerlines && npm run proxy:railroads && npm run proxy:rivers && npm run proxy:roads && npm run proxy:trails && npm run proxy:indexer && npm run proxy:curated",
    "proxy:avitar": "ts-node --dir bin avitar.ts",
    "proxy:buildings": "ts-node --dir bin buildings.ts",
    "proxy:buildings:curated": "ts-node --dir bin buildings-curated.ts",
    "proxy:counties": "ts-node --dir bin counties.ts",
    "proxy:curated": "npm run proxy:buildings:curated && npm run proxy:parcels:curated",
    "proxy:explorer": "ts-node --dir bin explorer.ts",
    "proxy:indexer": "ts-node --dir bin indexer.ts",
    "proxy:lakes": "ts-node --dir bin lakes.ts",
    "proxy:owner:analysis": "ts-node --dir bin owner-analysis.ts",
    "proxy:parcels": "npm run proxy:parcels:belknap && npm run proxy:parcels:carroll && npm run proxy:parcels:cheshire && npm run proxy:parcels:coos && npm run proxy:parcels:grafton && npm run proxy:parcels:hillsborough && npm run proxy:parcels:merrimack && npm run proxy:parcels:rockingham && npm run proxy:parcels:strafford && npm run proxy:parcels:sullivan && npm run proxy:parcels:curated",
    "proxy:parcels:belknap": "ts-node --dir bin parcels.ts --county BELKNAP",
    "proxy:parcels:carroll": "ts-node --dir bin parcels.ts --county CARROLL",
    "proxy:parcels:cheshire": "ts-node --dir bin parcels.ts --county CHESHIRE",
    "proxy:parcels:coos": "ts-node --dir bin parcels.ts --county COOS",
    "proxy:parcels:curated": "ts-node --dir bin parcels-curated.ts",
    "proxy:parcels:grafton": "ts-node --dir bin parcels.ts --county GRAFTON",
    "proxy:parcels:hillsborough": "ts-node --dir bin parcels.ts --county HILLSBOROUGH",
    "proxy:parcels:merrimack": "ts-node --dir bin parcels.ts --county MERRIMACK",
    "proxy:parcels:rockingham": "ts-node --dir bin parcels.ts --county ROCKINGHAM",
    "proxy:parcels:strafford": "ts-node --dir bin parcels.ts --county STRAFFORD",
    "proxy:parcels:sullivan": "ts-node --dir bin parcels.ts --county SULLIVAN",
    "proxy:parcels:validate": "ts-node --dir bin parcel-validator.ts ",
    "proxy:places": "ts-node --dir bin places.ts",
    "proxy:powerlines": "ts-node --dir bin powerlines.ts",
    "proxy:powerlines:prepare": "ts-node --dir bin powerlines-prepare.ts",
    "proxy:railroads": "ts-node --dir bin railroads.ts",
    "proxy:rivers": "ts-node --dir bin rivers.ts",
    "proxy:roads": "ts-node --dir bin roads.ts",
    "proxy:state": "ts-node --dir bin state.ts",
    "proxy:towns": "ts-node --dir bin towns.ts",
    "proxy:trails": "ts-node --dir bin trails.ts",
    "serve:author": "ng serve author --port 4200 --allowed-hosts admin.lots.online",
    "serve:author:ssl": "ws -p 8100 --cert .ssh/ssl/cert.pem --key .ssh/ssl/key.pem --https --spa index.html --directory dist/author --log.format dev",
    "serve:proxy": "npm run compile:proxy && node dist/proxy/server.js --port 4201",
    "serve:viewer:henniker": "npm run assets:viewer:henniker && ng serve viewer --port 4202 --allowed-hosts henniker.lots.online",
    "serve:viewer:ssl": "ws -p 8102 --cert .ssh/ssl/cert.pem --key .ssh/ssl/key.pem --https --spa index.html --directory dist/viewer --log.format dev",
    "serve:viewer:washington": "npm run assets:viewer:washington && ng serve viewer --port 4202 --allowed-hosts washington.lots.online"
  },
  "dependencies": {
    "@angular/animations": "^17",
    "@angular/cdk": "^17",
    "@angular/common": "^17",
    "@angular/core": "^17",
    "@angular/fire": "^17",
    "@angular/forms": "^17",
    "@angular/material": "^17",
    "@angular/platform-browser": "^17",
    "@angular/platform-browser-dynamic": "^17",
    "@angular/router": "^17",
    "@angular/service-worker": "^17",
    "@esri/arcgis-to-geojson-utils": "1.3.0",
    "@fortawesome/angular-fontawesome": "0.14.0",
    "@fortawesome/fontawesome-free": "^6",
    "@fortawesome/fontawesome-svg-core": "^6",
    "@fortawesome/free-brands-svg-icons": "^6",
    "@fortawesome/free-regular-svg-icons": "^6",
    "@fortawesome/free-solid-svg-icons": "^6",
    "@fortawesome/pro-duotone-svg-icons": "^6",
    "@fortawesome/pro-light-svg-icons": "^6",
    "@fortawesome/pro-regular-svg-icons": "^6",
    "@fortawesome/pro-solid-svg-icons": "^6",
    "@mapbox/togeojson": "0.16.2",
    "@ngxs/devtools-plugin": "^3",
    "@ngxs/logger-plugin": "^3",
    "@ngxs/router-plugin": "^3",
    "@ngxs/storage-plugin": "^3",
    "@ngxs/store": "^3",
    "@sentry/angular-ivy": "^7",
    "@sentry/browser": "^7",
    "@sentry/tracing": "^7",
    "@turf/turf": "^6",
    "backoff-rxjs": "^7",
    "chalk": "^4",
    "comlink": "^4",
    "debounce-decorator": "^1",
    "elm-pep": "^1",
    "fast-copy": "^3",
    "fast-equals": "^5",
    "file-saver": "^2",
    "firebase": "^10",
    "fontfaceobserver": "^2",
    "fuzzysort": "^2",
    "globalthis": "^1",
    "html2canvas": "^1",
    "injection-js": "^2",
    "jszip": "^3",
    "material-design-icons": "^3",
    "md5-file": "^5",
    "ngx-pipes": "^3",
    "ngx-router-animations": "^13",
    "node-fetch": "2.6.7",
    "object-hash": "^3",
    "ol": "^8",
    "ol-ext": "^4",
    "ol-mapbox-style": "^12",
    "polylabel": "^1",
    "proj4": "^2",
    "request": "^2",
    "rxfire": "^6",
    "rxjs": "^7",
    "serverx-ts": "0.0.41",
    "shpjs": "4.0.2",
    "tslib": "^2",
    "typeface-roboto": "^1",
    "ua-parser-js": "^1",
    "unzipper": "0.10.14",
    "url-parse": "^1",
    "yargs": "^17",
    "zone.js": "~0.14.2"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^17",
    "@angular-eslint/builder": "^17",
    "@angular-eslint/eslint-plugin": "^17",
    "@angular-eslint/eslint-plugin-template": "^17",
    "@angular-eslint/template-parser": "^17",
    "@angular/cli": "^17",
    "@angular/compiler": "^17",
    "@angular/compiler-cli": "^17",
    "@types/file-saver": "^2",
    "@types/fontfaceobserver": "^2",
    "@types/node-fetch": "2.6.1",
    "@types/object-hash": "^3",
    "@types/ol": "^7",
    "@types/proj4": "^2",
    "@types/recursive-readdir": "^2",
    "@types/shpjs": "^3",
    "@types/ua-parser-js": "0.7.39",
    "@types/unzipper": "0.10.9",
    "@types/url-parse": "^1",
    "@types/yargs": "^17",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "eslint": "^8",
    "eslint-config-mflorence99": "^1.2.5",
    "eslint-config-prettier": "^9",
    "eslint-plugin-import": "^2",
    "eslint-plugin-import-splitnsort": "^1",
    "eslint-plugin-prefer-arrow": "^1",
    "eslint-plugin-prettier": "^5",
    "firebase-admin": "^12",
    "inquirer": "^8",
    "jsome": "^2",
    "node-dbf": "0.4.0",
    "postcss": "^8",
    "postcss-angular": "^1",
    "postcss-scss": "^4",
    "prettier": "^3",
    "prettier-plugin-css-order": "^2",
    "prettier-plugin-package": "^1",
    "recursive-readdir": "^2",
    "serverless-apigw-binary": "0.4.4",
    "serverless-domain-manager": "^7",
    "stylelint": "^16",
    "stylelint-config-standard": "^35",
    "stylelint-order": "^6",
    "ts-node": "^10",
    "typescript": "^5"
  }
}
